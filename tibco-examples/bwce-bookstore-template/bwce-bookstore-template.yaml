apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: bwce-bookstore-template
  title: BWCE - Bookstore - Modified2
  description: Modified Bookstore Sample Template
  tags:
    - tibco
    - bwce
    - recommended
spec:
  owner: tibco-templates
  type: bwce

  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the BWCE Project
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the BWCE Project
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        db_port:
          title: Database PORT
          type: string
          description: The Database PORT that this BWCE-Project should use to connect to the database
          default: '5432'
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch
      name: BWCE Skeleton
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          db_port: ${{ parameters.db_port }}

    - id: backstage_request
      name: backstage request
      action: http:backstage:request
      input:
        method: 'POST'
        path: '/proxy/jenkins'

  output:
    getResponse: '{{ steps.backstage_request.output.body }}'
    getCode: '{{ steps.backstage_request.output.code }}'
    getHeaders: '{{ steps.backstage_request.output.headers }}'
